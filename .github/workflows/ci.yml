name: Token Bowl MCP CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    
    services:
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Set up cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-
    
    - name: Install dependencies
      run: |
        uv sync --extra test
    
    - name: Run tests
      env:
        REDIS_URL: redis://localhost:6379
        FFNERD_API_KEY: "test_key"  # Dummy key for tests
      run: |
        # Run unit tests only (skip integration tests that need real API)
        uv run pytest tests/test_integration.py -v --tb=short --junitxml=junit/test-results-${{ matrix.python-version }}.xml
    
    - name: Upload test results
      uses: actions/upload-artifact@v5
      if: always()
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
    
    # Test reporter disabled due to permission issues
    # Can be re-enabled with proper GitHub App permissions

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: "3.13"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    
    - name: Install dependencies
      run: |
        uv sync
        uv pip install ruff
    
    - name: Run ruff
      run: |
        uv run ruff check . --ignore E501  # Ignore line length
        uv run ruff format . --check